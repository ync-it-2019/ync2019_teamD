<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ync.project.front.mapper.InquryMapper">
	
	<resultMap type="com.ync.project.domain.InquryVO" id="inquryMap">
      <id property="userid" column="userid"/>
      <result property="userid" column="userid"/>
      <result property="inqury_num" column="inqury_num"/>
      <result property="attach" column="attach"/>
      <result property="content" column="content"/>
      <result property="ripple_content" column="ripple_content"/>
      <result property="ripple_check" column="ripple_check"/>
      <result property="title" column="title"/>
      <collection property="inquryList" resultMap="inquryMap">
      </collection> 
   </resultMap>
   
   
     <sql id = "criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item= 'type' collection = "typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							simple_content like '%' ||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							category like '%' ||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							company like '%' ||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
   
     <select id="getListWithPaging" resultType="com.ync.project.domain.InquryVO">
		<![CDATA[
		SELECT inqury_num,
			   title,
			   content,
			   userid
	    FROM (
	    	  SELECT /*+INDEX_DESC(teamd_inqury xpkteamd_inqury) */
	    	   rownum rn,
	    	   inqury_num,
			   title,
			   content,
			   userid
	    	  FROM teamd_inqury
	    	  WHERE
		]]>
		<include refid = "criteria"></include>
		<![CDATA[
			rownum <= #{pageNum} * #{amount}
			)
		WHERE rn > (#{pageNum} -1) * #{amount}
		]]>
	</select>
   
	
     <select id="getList" resultType="com.ync.project.domain.InquryVO">
	<![CDATA[
		SELECT * FROM teamd_inqury WHERE inqury_num > 0
		]]>
	</select>
	
	<insert id="insert">
	
	    <selectKey keyProperty="inqury_num" order="BEFORE"
			resultType="long">
			SELECT teamd_seq_inqury.nextval FROM dual
		</selectKey>
		
		INSERT INTO teamd_inqury(
		                         inqury_num,
		                         title,
		                         attach,
		                         userid,
						         content)
		VALUES (teamd_seq_inqury.nextval,
		        #{title},
		        #{attach},
		        #{userid},
		        #{content})
	</insert>
	

	
	<update id="update">
		UPDATE teamd_inqury 
		SET    inqury_num = #{inqury_num},
		       ripple_content = #{ripple_content},
		       ripple_check = #{ripple_check}
		WHERE  inqury_num = #{inqury_num}
	</update>
	
	<delete id="delete">
		delete from teamd_inqury where inqury_num = #{inqury_num}
	</delete>
	
	<select id="read" resultType = "com.ync.project.domain.InquryVO">
		SELECT * FROM teamd_inqury where inqury_num = #{inqury_num}
	</select>
	
	<select id="getTotalCount" resultType="int">
		SELECT count(*) 
		FROM teamd_inqury
		WHERE inqury_num > 0
	</select>
	
</mapper>

